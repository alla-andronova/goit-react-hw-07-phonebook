{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","redux/slices/contacts.js","components/contactForm/ContactForm.jsx","components/contactList/ContactList.jsx","redux/slices/filter.js","components/filter/Filter.jsx","components/App.jsx","redux/store/index.js","index.jsx","components/contactForm/ContactForm.module.css"],"names":["module","exports","contactsSlice","createSlice","name","initialState","reducers","addContact","state","action","find","contact","toLowerCase","payload","alert","deleteContact","filter","id","actions","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","uuidv4","className","s","form","label","input","onChange","type","pattern","title","required","btn","ContactList","contacts","useSelector","normalizedFilter","filteredContacts","includes","deleteItem","dataset","list","map","item","onClick","filterSlice","Filter","filterValue","currentTarget","handleFilter","App","style","textAlign","length","persistConfig","key","storage","rootReducer","persistedReducer","persistReducer","combineReducers","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6b8c9bee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2K4PC\",\"item\":\"ContactList_item__3_vMR\",\"btn\":\"ContactList_btn__2LqVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23XmH\",\"input\":\"Filter_input__3K0YO\"};","import { createSlice } from '@reduxjs/toolkit';\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: [],\n  reducers: {\n    addContact: (state, action) => {\n      if (\n        state.find(\n          contact =>\n            contact.name.toLowerCase() === action.payload.name.toLowerCase(),\n        )\n      ) {\n        alert(`${action.payload.name} is already in contacts`);\n        return;\n      }\n      return [...state, action.payload];\n    },\n    deleteContact: (state, action) =>\n      state.filter(contact => contact.id !== action.payload),\n  },\n});\n//создается обьект в contactsSlice у которого уже есть свойство actions, где уже находятся addContact и deleteContact\nexport const { addContact, deleteContact } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\n// import { addContact } from '../../redux/actions/contacts';\nimport { addContact } from '../../redux/slices/contacts';\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName(state => '');\n    setNumber(state => '');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number, id: uuidv4() }));\n\n    reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(state => value);\n        break;\n      case 'number':\n        setNumber(state => value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n// import { deleteContact } from '../../redux/actions/contacts';\nimport { deleteContact } from '../../redux/slices/contacts';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = normalizedFilter\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      )\n    : contacts;\n\n  const deleteItem = e => {\n    const id = e.target.dataset.id;\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ul className={s.list}>\n      {filteredContacts &&\n        filteredContacts.map(({ id, name, number }) => (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              data-id={id}\n              type=\"button\"\n              onClick={deleteItem}\n              className={s.btn}\n            >\n              &#10060;\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { createSlice } from '@reduxjs/toolkit';\n// import { useSelector, useDispatch } from 'react-redux';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    filter: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const { filter } = filterSlice.actions;\nexport default filterSlice.reducer;\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filter } from '../../redux/slices/filter';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filterValue = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(filter(e.currentTarget.value));\n  };\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filterValue}\n          onChange={e => handleFilter(e)}\n        />\n      </label>\n    </>\n  );\n}\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\n\nexport default function App() {\n  const contacts = useSelector(state => state.contacts);\n\n  return (\n    <>\n      <h1 style={{ textAlign: 'center' }}>Phonebook</h1>\n      <ContactForm />\n      {contacts.length > 0 && <h2 style={{ textAlign: 'center' }}>Contacts</h2>}\n\n      {contacts.length > 0 && <Filter />}\n\n      <ContactList />\n    </>\n  );\n}\n","// import { createStore } from 'redux';\nimport {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contacts from '../slices/contacts';\nimport filter from '../slices/filter';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// import { rootReducer } from '../reducers/index';\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst persistConfig = {\n  key: 'hello',\n  storage,\n};\n\nconst rootReducer = {\n  contacts,\n  filter,\n};\nconst persistedReducer = persistReducer(\n  persistConfig,\n  combineReducers(rootReducer),\n);\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"label\":\"ContactForm_label__3cSwc\",\"input\":\"ContactForm_input__2u7Lv\",\"btn\":\"ContactForm_btn__2Kwxa\"};"],"sourceRoot":""}