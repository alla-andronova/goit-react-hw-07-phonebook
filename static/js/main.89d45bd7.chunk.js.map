{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","redux/services.js","redux/slices/contacts.js","components/contactForm/ContactForm.jsx","redux/selector/selectors.js","components/contactList/ContactList.jsx","redux/slices/filter.js","components/filter/Filter.jsx","components/App.jsx","redux/store/index.js","index.jsx","components/contactForm/ContactForm.module.css"],"names":["module","exports","fetchContacts","a","axios","get","response","data","postContact","contact","post","delContact","contactId","delete","defaults","baseURL","fetchAllContacts","createAsyncThunk","createContact","deleteContact","contactsSlice","createSlice","name","initialState","items","status","error","extraReducers","fulfilled","state","action","payload","pending","rejected","filter","console","log","id","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","className","s","form","label","input","onChange","type","pattern","title","required","btn","getFilteredContacts","createSelector","contacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","list","map","item","onClick","filterSlice","reducers","actions","Filter","filterValue","currentTarget","handleFilter","App","useEffect","style","textAlign","length","rootReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89d45bd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2K4PC\",\"item\":\"ContactList_item__3_vMR\",\"btn\":\"ContactList_btn__2LqVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23XmH\",\"input\":\"Filter_input__3K0YO\"};","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nexport async function fetchContacts() {\n  const response = await axios.get(\"/contacts\");\n  return response.data;\n}\nexport async function postContact(contact) {\n  const response = await axios.post(\"/contacts\", contact);\n  return response.data;\n}\nexport async function delContact(contactId) {\n  const response = await axios.delete(`/contacts/${contactId}`);\n  return response.data;\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchContacts, postContact, delContact } from \"../services\";\n\nexport const fetchAllContacts = createAsyncThunk(\n  \"contacts/fetchAllContacts\",\n  async () => {\n    const response = await fetchContacts();\n\n    return response;\n  }\n);\n\nexport const createContact = createAsyncThunk(\n  \"contacts/createContact\",\n  async (contact) => {\n    const response = await postContact(contact);\n\n    return response;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (contactId) => {\n    await delContact(contactId);\n\n    return contactId;\n  }\n);\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    status: null,\n    error: null,\n  },\n  extraReducers: {\n    [fetchAllContacts.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = null;\n      state.error = null;\n    },\n    [fetchAllContacts.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchAllContacts.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"error\";\n    },\n\n    [createContact.fulfilled]: (state, action) => {\n      state.items = [...state.items, action.payload];\n      state.status = null;\n      state.error = null;\n    },\n    [createContact.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = \"error\";\n    },\n    [createContact.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"error\";\n    },\n\n    [deleteContact.fulfilled]: (state, action) => {\n      state.items = state.items.filter((contact) => {\n        console.log(\"payload\", action.payload, contact.id);\n        return contact.id !== action.payload;\n      });\n      state.status = null;\n      state.error = null;\n    },\n    [deleteContact.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = \"error\";\n    },\n    [deleteContact.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"error\";\n    },\n  },\n});\n\nexport default contactsSlice.reducer;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createContact } from \"../../redux/slices/contacts\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const reset = () => {\n    setName((state) => \"\");\n    setNumber((state) => \"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(createContact({ name, number }));\n    reset();\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName((state) => value);\n        break;\n      case \"number\":\n        setNumber((state) => value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilter = (state) => state.filter;\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    const result = normalizedFilter\n      ? contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n      : contacts;\n    return result;\n  }\n);\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/slices/contacts\";\nimport { getFilteredContacts } from \"../../redux/selector/selectors\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts &&\n        contacts.map(({ id, name, number }) => (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              data-id={id}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              className={s.btn}\n            >\n              &#10060;\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { createSlice } from '@reduxjs/toolkit';\n// import { useSelector, useDispatch } from 'react-redux';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    filter: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const { filter } = filterSlice.actions;\nexport default filterSlice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filter } from \"../../redux/slices/filter\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const filterValue = useSelector((state) => state.filter);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = (e) => {\n    dispatch(filter(e.currentTarget.value));\n  };\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filterValue}\n          onChange={(e) => handleFilter(e)}\n        />\n      </label>\n    </>\n  );\n}\n\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport { fetchAllContacts } from \"../redux/slices/contacts\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(fetchAllContacts()), [dispatch]);\n\n  const contacts = useSelector((state) => state.contacts.items);\n\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>Phonebook</h1>\n      <ContactForm />\n      {contacts.length > 0 && <h2 style={{ textAlign: \"center\" }}>Contacts</h2>}\n\n      {contacts.length > 0 && <Filter />}\n\n      <ContactList />\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contacts from \"../slices/contacts\";\nimport filter from \"../slices/filter\";\n\nconst rootReducer = {\n  contacts,\n  filter,\n};\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport store from \"./redux/store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"label\":\"ContactForm_label__3cSwc\",\"input\":\"ContactForm_input__2u7Lv\",\"btn\":\"ContactForm_btn__2Kwxa\"};"],"sourceRoot":""}